{
  http-server {
    host: "0.0.0.0"
    host: ${?HTTP_SERVER_HOST}
    port: 8080
    port: ${?HTTP_SERVER_PORT}
    end-point: "http://"${http-server.host}":"${http-server.port}
  }

  grpc-timeout: 1second
  grpc-timeout: ${?GRPC_TIMEOUT}

  grpc-server {
    host: "localhost"
    host: ${?GRPC_SERVER_HOST}
    port: 9081
    port: ${?GRPC_SERVER_PORT}
    end-point: "http://"${grpc-server.host}":"${grpc-server.port}
  }

  kafka {

    items-topic: "items"
    buy-events-topic: "buy-actions"
    sell-events-topic: "sell-actions"
    pawn-events-topic: "pawn-actions"

    bootstrap.servers = "localhost:9092"
    client.id = ""

    partitioner.class = null

    acks = "1"
    buffer.memory = 33554432
    compression.type = "none"
    retries = 0
    max.in.flight.requests.per.connection = 5

    ssl.key.password = null
    ssl.keystore.password = null
    ssl.keystore.location = null
    ssl.truststore.password = null
    ssl.truststore.location = null

    batch.size = 16384
    connections.max.idle.ms = 540000
    linger.ms = 0
    max.block.ms = 60000
    max.request.size = 1048576

    receive.buffer.bytes = 32768
    request.timeout.ms = 40000

    sasl.kerberos.service.name = null
    sasl.mechanism = "GSSAPI"

    security.protocol = "PLAINTEXT"
    send.buffer.bytes = 131072
    ssl.enabled.protocols = "TLSv1.2,TLSv1.1,TLSv1"
    ssl.keystore.type = "JKS"
    ssl.protocol = "TLS"
    ssl.provider = null
    ssl.truststore.type = "JKS"

    reconnect.backoff.ms = 50
    retry.backoff.ms = 100

    metadata.max.age.ms = 300000

    metric.reporters = ""
    metrics.num.samples = 2
    metrics.sample.window.ms = 30000

    # Consumer specific settings
    client.rack = ""
    fetch.min.bytes = 1
    fetch.max.bytes = 52428800
    group.id = ""
    heartbeat.interval.ms = 3000
    max.partition.fetch.bytes = 1048576
    auto.offset.reset = "latest"
    # Disabled to use back-pressure or manual commits instead
    enable.auto.commit = false
    exclude.internal.topics = true
    receive.buffer.bytes = 65536
    check.crcs = true
    fetch.max.wait.ms = 500

    session.timeout.ms = 10000
    max.poll.records = 500
    max.poll.interval.ms = 300000

    monix.producer.sink.parallelism = 100
    monix.observable.seek.onStart = "no-seek"
    monix.observable.commit.type = "sync"
    monix.observable.commit.order = "after-ack"
  }
}